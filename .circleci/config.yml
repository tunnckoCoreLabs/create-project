version: 2

workdir: &workdir
  working_directory: ~/create-project

# node8osx: &node8osx
#   <<: *workdir
#   macos:
#     xcode: "9.2"

# node10osx: &node10osx
#   <<: *workdir
#   macos:
#     xcode: "9"

node8linux: &node8linux
  <<: *workdir
  docker:
    - image: circleci/node:8

node10linux: &node10linux
  <<: *workdir
  docker:
    - image: circleci/node:10

restore_modules_cache: &restore_modules_cache
  restore_cache:
    keys:
      - create-project-{{ checksum "yarn.lock" }}
      # fallback to using the latest cache if no exact match is found
      - create-project-

# jobinstall: &jobinstall
#   steps:
#     - checkout
#     # - *restore_modules_cache
#     - run:
#         name: Installing PNPM package manager
#         command: sudo npm i -g pnpm
#     - run:
#         name: Installing project dependencies
#         command: pnpm run inst
#     - save_cache:
#         key: create-project-{{ checksum "yarn.lock" }}
#         paths: node_modules
#     - run:
#         name: Remove node_modules to cleanup workspace
#         command: rm -rf node_modules

jobtest: &jobtest
  steps:
    - checkout
    - *restore_modules_cache
    - run:
        name: Installing project dependencies
        command: yarn install --prefer-offline || yarn install
    - run:
        name: Testing your project
        command: yarn tunnckocore-scripts test
    - save_cache:
        key: create-project-{{ checksum "yarn.lock" }}
        paths: node_modules
    - run:
        name: Sending test coverage to CodeCov
        command: bash <(curl -s https://codecov.io/bash)

jobs:
  # install-node8linux:
  #   <<: *node8linux
  #   <<: *jobinstall

  test-node8linux:
    <<: *node8linux
    <<: *jobtest

  # install-node10linux:
  # <<: *node10linux
  # <<: *jobinstall

  test-node10linux:
    <<: *node10linux
    <<: *jobtest

  # install-node8osx:
  #   <<: *node8osx
  #   <<: *jobinstall

  # test-node8osx:
  #   <<: *node8osx
  #   <<: *jobtest

  # install-node10osx:
  #   <<: *node10osx
  #   <<: *jobinstall

  # test-node10osx:
  #   <<: *node10osx
  #   <<: *jobtest

  release:
    <<: *node10linux
    steps:
      - checkout
      - *restore_modules_cache
      - run:
          name: Bundling your awesome project
          command: yarn tunnckocore-scripts build || echo "No build step."
      - run:
          name: Releasing and publishing
          command: yarn tunnckocore-scripts release

workflows:
  version: 2
  automated:
    jobs:
      # Linux
      - test-node8linux
      - test-node10linux

      # - install-node8linux
      # - test-node8linux:
      #     requires:
      #       - install-node8linux
      # - install-node10linux
      # - test-node10linux:
      #     requires:
      #       - install-node10linux
      # OSX
      # - install-node8osx
      # - test-node8osx:
      #     requires:
      #       - install-node8osx
      # - install-node10osx
      # - test-node10osx:
      #     requires:
      #       - install-node10osx

      # Release and NPM publish
      # Executed only on master
      - release:
          requires:
            # - test-node8osx
            # - test-node10osx
            - test-node8linux
            - test-node10linux
          filters:
            branches:
              only: master
          context: org-secret
